"""CreateTables

Revision ID: 1b3cbb19800f
Revises: 
Create Date: 2024-11-15 13:38:38.521612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1b3cbb19800f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
    sa.Column('customerId', sa.UUID(), nullable=False),
    sa.Column('customerName', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('customerId')
    )
    op.create_table('employee',
    sa.Column('employeeId', sa.UUID(), nullable=False),
    sa.Column('employeeName', sa.String(length=255), nullable=False),
    sa.Column('employeeEmail', sa.String(length=255), nullable=False),
    sa.Column('employeePhone', sa.String(length=20), nullable=False),
    sa.Column('employeeAddress', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('employeeId')
    )
    op.create_table('product_type',
    sa.Column('productTypeId', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('sku', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('productTypeId'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('product',
    sa.Column('productId', sa.UUID(), nullable=False),
    sa.Column('productModel', sa.String(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('manufacture_date', sa.Date(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('productTypeId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['productTypeId'], ['product_type.productTypeId'], ),
    sa.PrimaryKeyConstraint('productId')
    )
    op.create_table('defect',
    sa.Column('defectId', sa.UUID(), nullable=False),
    sa.Column('defectLevel', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('registration_date', sa.Date(), nullable=False),
    sa.Column('productId', sa.UUID(), nullable=False),
    sa.Column('employeeId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['employeeId'], ['employee.employeeId'], ),
    sa.ForeignKeyConstraint(['productId'], ['product.productId'], ),
    sa.PrimaryKeyConstraint('defectId')
    )
    op.create_table('return_request',
    sa.Column('returnRequestId', sa.UUID(), nullable=False),
    sa.Column('request_start_date', sa.Date(), nullable=True),
    sa.Column('request_finish_date', sa.Date(), nullable=True),
    sa.Column('returnRequestStatus', sa.TEXT(), nullable=True),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('proofDocument', sa.TEXT(), nullable=True),
    sa.Column('customerId', sa.UUID(), nullable=False),
    sa.Column('productId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['customerId'], ['customer.customerId'], ),
    sa.ForeignKeyConstraint(['productId'], ['product.productId'], ),
    sa.PrimaryKeyConstraint('returnRequestId')
    )
    op.create_table('repair',
    sa.Column('repairId', sa.UUID(), nullable=False),
    sa.Column('repair_start_date', sa.Date(), nullable=False),
    sa.Column('repair_finish_date', sa.Date(), nullable=False),
    sa.Column('details', sa.TEXT(), nullable=True),
    sa.Column('costs', sa.Float(), nullable=True),
    sa.Column('defectId', sa.UUID(), nullable=False),
    sa.Column('employeeId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['defectId'], ['defect.defectId'], ),
    sa.ForeignKeyConstraint(['employeeId'], ['employee.employeeId'], ),
    sa.PrimaryKeyConstraint('repairId')
    )
    op.create_table('request_approval',
    sa.Column('requestApprovalId', sa.UUID(), nullable=False),
    sa.Column('approval_date', sa.Date(), nullable=True),
    sa.Column('requestApprovalStatus', sa.TEXT(), nullable=True),
    sa.Column('comments', sa.TEXT(), nullable=True),
    sa.Column('returnRequestId', sa.UUID(), nullable=False),
    sa.Column('employeeId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['employeeId'], ['employee.employeeId'], ),
    sa.ForeignKeyConstraint(['returnRequestId'], ['return_request.returnRequestId'], ),
    sa.PrimaryKeyConstraint('requestApprovalId')
    )
    op.create_table('sorting',
    sa.Column('sortindId', sa.UUID(), nullable=False),
    sa.Column('sorting_date', sa.Date(), nullable=True),
    sa.Column('sortingStatus', sa.TEXT(), nullable=True),
    sa.Column('details', sa.TEXT(), nullable=True),
    sa.Column('returnRequestId', sa.UUID(), nullable=False),
    sa.Column('employeeId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['employeeId'], ['employee.employeeId'], ),
    sa.ForeignKeyConstraint(['returnRequestId'], ['return_request.returnRequestId'], ),
    sa.PrimaryKeyConstraint('sortindId')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sorting')
    op.drop_table('request_approval')
    op.drop_table('repair')
    op.drop_table('return_request')
    op.drop_table('defect')
    op.drop_table('product')
    op.drop_table('product_type')
    op.drop_table('employee')
    op.drop_table('customer')
    # ### end Alembic commands ###
